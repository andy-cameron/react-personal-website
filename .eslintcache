[{"/Users/andrew.cameron/Development/Web/react-personal-website/src/components/Header.js":"1"},{"size":3927,"mtime":1609677238266,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"q0bdce","/Users/andrew.cameron/Development/Web/react-personal-website/src/components/Header.js",["7","8","9","10","11","12"],"import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { withRouter } from 'react-router-dom';\nimport './Header.css';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\tboxShadow: 'none',\n\t\tbackgroundColor: '#242d42'\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2)\n\t},\n\theaderButton: {\n\t\tflex: 1,\n\t\tjustifyContent: 'flex-end',\n\t\tbackgroundColor: '#242d42'\n\t},\n\ttitle: {\n\t\t[theme.breakpoints.down('xs')]: {\n\t\t\tflexGrow: 1\n\t\t}\n\t},\n\theaderOptions: {\n\t\tdisplay: 'flex',\n\t\tflex: 1,\n\t\tjustifyContent: 'flex-end',\n\t\tbackground: '#242d42'\n\t}\n}));\n\nconst Header = props => {\n\tconst { history } = props;\n\tconst classes = useStyles();\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\tconst open = Boolean(anchorEl);\n\tconst theme = useTheme();\n\tconst isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n\n\tconst handleMenu = event => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleMenuClick = pageURL => {\n\t\thistory.push(pageURL);\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst handleButtonClick = pageURL => {\n\t\thistory.push(pageURL);\n\t};\n\n\tconst menuItems = [\n\t\t{\n\t\t\tmenuTitle: 'Home',\n\t\t\tpageURL: '/'\n\t\t},\n\t\t{\n\t\t\tmenuTitle: 'About',\n\t\t\tpageURL: '/about'\n\t\t},\n\t\t{\n\t\t\tmenuTitle: 'Projects',\n\t\t\tpageURL: '/projects'\n\t\t},\n\t\t{\n\t\t\tmenuTitle: 'Contact',\n\t\t\tpageURL: '/contact'\n\t\t}\n\t];\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position='static' style={{ background: 'none', boxShadow: 'none' }}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t{isMobile ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tedge='start'\n\t\t\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\t\taria-label='menu'\n\t\t\t\t\t\t\t\tonClick={handleMenu}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\tid='menu-appbar'\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\t\t\t\tvertical: 'top',\n\t\t\t\t\t\t\t\t\thorizontal: 'right'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\t\t\ttransformOrigin={{\n\t\t\t\t\t\t\t\t\tvertical: 'top',\n\t\t\t\t\t\t\t\t\thorizontal: 'right'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\t\tonClose={() => setAnchorEl(null)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{menuItems.map(menuItem => {\n\t\t\t\t\t\t\t\t\tconst { menuTitle, pageURL } = menuItem;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<MenuItem onClick={() => handleMenuClick(pageURL)}>\n\t\t\t\t\t\t\t\t\t\t\t{menuTitle}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className={classes.headerOptions}>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclassName={`header-button${\n\t\t\t\t\t\t\t\t\twindow.location.pathname === '/' ? '-active' : ''\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tonClick={() => handleButtonClick('/')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h1>HOME</h1>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclassName={`header-button${\n\t\t\t\t\t\t\t\t\twindow.location.pathname === '/about' ? '-active' : ''\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tonClick={() => handleButtonClick('/about')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h1>ABOUT</h1>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclassName={`header-button${\n\t\t\t\t\t\t\t\t\twindow.location.pathname === '/projects' ? '-active' : ''\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tonClick={() => handleButtonClick('/projects')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h1>PROJECTS</h1>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclassName={`header-button-contact${\n\t\t\t\t\t\t\t\t\twindow.location.pathname === '/contact' ? '-active' : ''\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tonClick={() => handleButtonClick('/contact')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h1>CONTACT ME</h1>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(Header);\n",{"ruleId":"13","severity":1,"message":"14","line":5,"column":8,"nodeType":"15","messageId":"16","endLine":5,"endColumn":18},{"ruleId":"13","severity":1,"message":"17","line":10,"column":8,"nodeType":"15","messageId":"16","endLine":10,"endColumn":14},{"ruleId":"18","severity":1,"message":"19","line":124,"column":8,"nodeType":"20","endLine":130,"endColumn":9},{"ruleId":"18","severity":1,"message":"19","line":133,"column":8,"nodeType":"20","endLine":139,"endColumn":9},{"ruleId":"18","severity":1,"message":"19","line":142,"column":8,"nodeType":"20","endLine":148,"endColumn":9},{"ruleId":"18","severity":1,"message":"19","line":151,"column":8,"nodeType":"20","endLine":157,"endColumn":9},"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]